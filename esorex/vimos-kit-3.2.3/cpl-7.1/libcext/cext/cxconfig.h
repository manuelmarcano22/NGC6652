/*
 * cxconfig.h: This is a generated file! Do not edit this file!
 *             All changes will be lost!
 */

#ifndef CXCONFIG_H_
#define CXCONFIG_H_

#include <limits.h>
#include <float.h>
#include <stdint.h>
#include <inttypes.h>

#include <cxmacros.h>


CX_BEGIN_DECLS

/*
 * Limits for numerical data types
 */

#define CX_MINSHORT  SHRT_MIN
#define CX_MAXSHORT  SHRT_MAX
#define CX_MAXUSHORT USHRT_MAX

#define CX_MININT    INT_MIN
#define CX_MAXINT    INT_MAX
#define CX_MAXUINT   UINT_MAX

#define CX_MINLONG   LONG_MIN
#define CX_MAXLONG   LONG_MAX
#define CX_MAXULONG  ULONG_MAX

#define CX_MINFLOAT  FLT_MIN
#define CX_MAXFLOAT  FLT_MAX

#define CX_MINDOUBLE DBL_MIN
#define CX_MAXDOUBLE DBL_MAX


/*
 * Number of bits per char
 */

#define CX_CHAR_BIT 8

/*
 * Fixed size integer types
 */

/* Macros for formatted output */

#define CX_PRINTF_FORMAT_INT8    PRIi8
#define CX_PRINTF_FORMAT_UINT8   PRIu8

#define CX_PRINTF_FORMAT_INT16    PRIi16
#define CX_PRINTF_FORMAT_UINT16   PRIu16

#define CX_PRINTF_FORMAT_INT32    PRIi32
#define CX_PRINTF_FORMAT_UINT32   PRIu32

#define CX_PRINTF_FORMAT_INT64    PRIi64
#define CX_PRINTF_FORMAT_UINT64   PRIu64

/* Macros for formatted output */

#define CX_SCANF_FORMAT_INT8    SCNi8
#define CX_SCANF_FORMAT_UINT8   SCNu8

#define CX_SCANF_FORMAT_INT16    SCNi16
#define CX_SCANF_FORMAT_UINT16   SCNu16

#define CX_SCANF_FORMAT_INT32    SCNi32
#define CX_SCANF_FORMAT_UINT32   SCNu32

#define CX_SCANF_FORMAT_INT64    SCNi64
#define CX_SCANF_FORMAT_UINT64   SCNu64

/* Type definitions */

typedef int8_t cxint8;
typedef uint8_t cxuint8;

typedef int16_t cxint16;
typedef uint16_t cxuint16;

typedef int32_t cxint32;
typedef uint32_t cxuint32;

 typedef int64_t cxint64;
 typedef uint64_t cxuint64;

#define CX_INT64_CONSTANT(val)   (val##L)
#define CX_UINT64_CONSTANT(val)  (val##UL)

#define CX_SIZEOF_VOID_P  8
#define CX_SIZEOF_SIZE_T  8

/*
 * Size type
 */

#define CX_PRINTF_FORMAT_SIZE_TYPE    "lu"
#define CX_PRINTF_FORMAT_SSIZE_TYPE   "li"

#define CX_SCANF_FORMAT_SIZE_TYPE    "lu"
#define CX_SCANF_FORMAT_SSIZE_TYPE   "li"

typedef signed long cxssize;
typedef unsigned long cxsize;

#define CX_MINSSIZE  CX_MINLONG
#define CX_MAXSSIZE  CX_MAXLONG
#define CX_MAXSIZE   CX_MAXULONG


typedef cxint64 cxoffset;

#define CX_MINOFFSET CX_MININT64
#define CX_MAXOFFSET CX_MAXINT64

/*
 * Pointer to integer conversion
 */

#define CX_POINTER_TO_INT(ptr)   ((cxint) (cxlong) (ptr))
#define CX_POINTER_TO_UINT(ptr)  ((cxint) (cxlong) (ptr))

#define CX_INT_TO_POINTER(val)   ((cxptr) (cxlong) (val))
#define CX_UINT_TO_POINTER(val)   ((cxptr) (cxlong) (val))

#ifdef __cplusplus
#  define CX_HAVE_INLINE  1
#else

#endif

#ifdef __cplusplus
#  define CX_CAN_INLINE  1
#endif

#define CX_HAVE_GNUC_VISIBILITY 1

#if defined(__SUNPRO_C) && (__SUNPRO_C >= 0x590)
#  define CX_GNUC_INTERNAL __attribute__((visibility("hidden")))
#elif defined(__SUNPRO_C) && (__SUNPRO_C >= 0x550)
#  define CX_GNUC_INTERNAL __hidden
#elif defined (__GNUC__) && defined (CX_HAVE_GNUC_VISIBILITY)
#  define CX_GNUC_INTERNAL __attribute__((visibility("hidden")))
#else
#  define CX_GNUC_INTERNAL  /* empty */
#endif

CX_END_DECLS

#endif /* CXCONFIG_H_ */
